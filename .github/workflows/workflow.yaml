name: Spark Rewards Pipelines
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  WEBAPP_NAME: spark-modern-app
  ACR_URL: modernspark.azurecr.io
  TAG_VERSION: 'v{0}'
jobs:

  prepare:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Bicep Build
      uses: aliencube/bicep-build-actions@v0.1
      with:
        files: 'Deploy/*.bicep'

    - name: Upload Artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: arm-templates
        path: Deploy

  build:
    runs-on: windows-latest
    needs: [prepare]
    env:
      NUGET_VERSION: '5.3.1'
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      AZURE_DATABASE_CONNECTION_STRING: 'Server=tcp:{0},1433;Initial Catalog=rewardsdb;User ID={1};Password={2};Persist Security Info=False;MultipleActiveResultSets=False;Encrypt=true;TrustServerCertificate=False;Connection Timeout=30;'
      RG_NAME: 'modern-spark-rg' 
      SQL_SERVER: modern-spark-sql.database.windows.net
    
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        fetch-depth: 0

    - name: Install Nuget
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: ${{ env.NUGET_VERSION}}

    - name: NuGet to restore dependencies as well as project-specific tools that are specified in the project file
      run: nuget restore Source/TailwindTraders.Rewards.Website.sln
  
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.0
    
    - name: Run MSBuild
      run: msbuild Source/TailwindTraders.Rewards.Website.sln /p:Configuration=Release /p:DeployOnBuild=true /p:PublishProfile=FolderProfile

    - name: Download a arm-templates
      uses: actions/download-artifact@v2
      with:
        name: arm-templates

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy Azure Resource Manager (ARM) Template
      uses: Azure/arm-deploy@v1
      id: iac
      with:
        subscriptionId:  ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ env.RG_NAME }}
        template: 'modern-infra.json'

    - uses: microsoft/variable-substitution@v1 
      with:
        files: '.\Publish\Web.config'
      env:
        dbContext: "${{ format(env.AZURE_DATABASE_CONNECTION_STRING, env.SQL_SERVER, secrets.SQL_USERNAME, secrets.SQL_PASSWORD ) }}"

    - uses: azure/docker-login@v1
      with:
        login-server: ${{ steps.iac.outputs.acrURL }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    #- run: |
    #    docker build -f .\Source\Dockerfile -t ${{ steps.iac.outputs.acrURL }}/${{ env.WEBAPP_NAME }}:${{ format(env.TAG_VERSION, github.event.number) }} .\Publish\
    #    docker push ${{ steps.iac.outputs.acrURL }}/${{ env.WEBAPP_NAME }}:${{ format(env.TAG_VERSION, github.event.number) }}
    
  staging:
    runs-on: windows-latest
    needs: [build]
    environment: 
      name: staging
      url: ${{ steps.modern-rewards-staging.outputs.webapp-url }}
    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set Web App ACR authentication
      uses: Azure/appservice-settings@v1
      with:
       app-name: ${{ env.WEBAPP_NAME }} 
       slot-name: staging
       app-settings-json: |
         [
             {
                 "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                 "value": "${{ secrets.ACR_PASSWORD }}",
                 "slotSetting": true
             },
             {
                 "name": "DOCKER_REGISTRY_SERVER_URL",
                 "value": "https://${{ env.ACR_URL }}",
                 "slotSetting": true
             },
             {
                 "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                 "value": "${{ secrets.ACR_USERNAME  }}",
                 "slotSetting": true
             }
         ]
  
    - name: 'Deploy to Azure Web App for Container'
      uses: azure/webapps-deploy@v2
      id: modern-rewards-staging
      with: 
        app-name: ${{ env.WEBAPP_NAME }} 
        slot-name: staging
        images: ${{ env.ACR_URL }}/${{ env.WEBAPP_NAME }}:${{ format(env.TAG_VERSION, github.event.number) }}

        
  production:
    runs-on: windows-latest
    needs: [staging]
    environment: 
      name: production
      url: ${{ steps.modern-rewards-prod.webapp-url }}
    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set Web App ACR authentication
      uses: Azure/appservice-settings@v1
      with:
       app-name: ${{ env.WEBAPP_NAME }} 
       app-settings-json: |
         [
             {
                 "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                 "value": "${{ secrets.ACR_PASSWORD }}",
                 "slotSetting": false
             },
             {
                 "name": "DOCKER_REGISTRY_SERVER_URL",
                 "value": "https://${{ env.ACR_URL }}",
                 "slotSetting": false
             },
             {
                 "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                 "value": "${{ secrets.ACR_USERNAME  }}",
                 "slotSetting": false
             }
         ]
  

    - name: 'Deploy to Azure Web App for Container'
      uses: azure/webapps-deploy@v2
      id: modern-rewards-prod
      with: 
        app-name: ${{ env.WEBAPP_NAME }} 
        images: ${{ env.ACR_URL }}/${{ env.WEBAPP_NAME }}:${{ format(env.TAG_VERSION, github.event.number) }}
